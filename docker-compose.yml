services:
  n8n:
    image: n8nio/n8n:${N8N_VERSION}
    container_name: n8n-finance
    restart: unless-stopped
    environment:
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_HOST=${N8N_DOMAIN}
      - N8N_PROTOCOL=https
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - GROQ_API_KEY=${GROQ_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - WEBHOOK_URL=${N8N_DOMAIN}/
    volumes:
      - ${DATA_FOLDER}:/home/node/.n8n
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=vps-monitoring_default"
      - "traefik.http.routers.n8n-finance.rule=Host(`${N8N_DOMAIN}`)"
      - "traefik.http.routers.n8n-finance.entrypoints=websecure"
      - "traefik.http.routers.n8n-finance.tls.certresolver=myresolver"
      - "traefik.http.services.n8n-finance.loadbalancer.server.port=5678"
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: personal-finance-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ${DATA_FOLDER}:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d financer_bot_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
      
networks:
  app-network:
    external: true
    name: vps-monitoring_default # Usamos la red de la aplicaci√≥n traefik existente
