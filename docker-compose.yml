services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Dashboard de Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-config/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik-config/dynamic_config:/etc/traefik/dynamic_config:ro
      - traefik-letsencrypt:/letsencrypt # Volumen para guardar los certificados SSL
    # Pasamos la variable de entorno para que traefik.yml la pueda usar
    environment:
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    restart: unless-stopped
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`${PROMETHEUS_DOMAIN}`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
  
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    command:
      - '--web.listen-address=:9100'
    restart: unless-stopped
  
  n8n:
    image: n8nio/n8n:${N8N_VERSION}
    container_name: n8n
    environment:
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_HOST=${N8N_DOMAIN}
      - N8N_PROTOCOL=https
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - GROQ_API_KEY=${GROQ_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - WEBHOOK_URL=${N8N_DOMAIN}/
    volumes:
      - ${DATA_FOLDER}:/home/node/.n8n
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`${N8N_DOMAIN}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.service=n8n"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.http.routers.n8n.tls.certresolver=myresolver"
    
    db:
      image: postgres:15-alpine
      container_name: personal-finance-db
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
      volumes:
        - ${DATA_FOLDER}:/var/lib/postgresql/data
      restart: unless-stopped
      healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d financer_bot_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    
volumes:
  traefik-letsencrypt: